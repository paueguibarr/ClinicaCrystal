package Jframes;


import clases.Conectar;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author paueguibar
 */
public class CuentaQuirofano extends javax.swing.JFrame {
    Conectar conn;
    PreparedStatement pst;
    ResultSet rs;

    /**
     * Creates new form CuentaAmb
     */
    public CuentaQuirofano() {
        initComponents();
        conn = new Conectar();
        loadPaciente();
        loadMateriales();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    /*
    This method gets all the users inputs, if the quantity is more than 0, then itll add it to the DB
    */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        combBoxMedicamentoACQ = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        spinMedicamentoACQ = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        combBoxServiciosACQ = new javax.swing.JComboBox<>();
        combBoxMaterialACQ = new javax.swing.JComboBox<>();
        combBoxSolucionesACQ = new javax.swing.JComboBox<>();
        combBoxSuturasACQ = new javax.swing.JComboBox<>();
        combBoxServAdACQ = new javax.swing.JComboBox<>();
        spinServiciosACQ = new javax.swing.JSpinner();
        spinMaterialACQ = new javax.swing.JSpinner();
        spinSolucionesACQ = new javax.swing.JSpinner();
        spinSuturasACQ = new javax.swing.JSpinner();
        spinServAdACQ = new javax.swing.JSpinner();
        btnAceptarACQ = new javax.swing.JButton();
        btnCancelarACQ = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        combBoxServAdExtACQ = new javax.swing.JComboBox<>();
        spinServAdExACQ = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        txtNombreACQ = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtOtroMat = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtOtroPU = new javax.swing.JTextField();
        spinOtro = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Songti SC", 0, 36)); // NOI18N
        jLabel1.setText("Agregar a Cuenta Quirofano");

        jLabel2.setText("Meidcamentos:");

        jLabel3.setText("Material de Curaci√≥n: ");

        jLabel4.setText("Soluciones:");

        jLabel5.setText("Servicios:");

        jLabel6.setText("Suturas:");

        jLabel7.setText("Servicios Adicionales:");

        btnAceptarACQ.setText("Aceptar");
        btnAceptarACQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarACQActionPerformed(evt);
            }
        });

        btnCancelarACQ.setText("Cancelar");
        btnCancelarACQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarACQActionPerformed(evt);
            }
        });

        jLabel8.setText("Servicios Adicionales Externos:");

        jLabel9.setText("Paciente:");

        txtNombreACQ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLabel11.setText("Otro: ");

        jLabel10.setText("Material");

        jLabel12.setText("precio Unitario");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtOtroMat, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtOtroPU, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinOtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addComponent(btnAceptarACQ)
                                .addGap(64, 64, 64)
                                .addComponent(btnCancelarACQ))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(42, 42, 42)
                                        .addComponent(txtNombreACQ, 0, 372, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(combBoxMedicamentoACQ, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(combBoxMaterialACQ, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(combBoxSolucionesACQ, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(combBoxSuturasACQ, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(combBoxServAdACQ, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(combBoxServAdExtACQ, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(combBoxServiciosACQ, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spinMedicamentoACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinServiciosACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinMaterialACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinSolucionesACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinSuturasACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinServAdACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinServAdExACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(52, 52, 52))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtNombreACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(combBoxServiciosACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinServiciosACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(combBoxMaterialACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinMaterialACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(combBoxMedicamentoACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinMedicamentoACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(combBoxSolucionesACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinSolucionesACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(combBoxSuturasACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinSuturasACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(combBoxServAdACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinServAdACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(combBoxServAdExtACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinServAdExACQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(txtOtroMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtOtroPU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinOtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptarACQ)
                    .addComponent(btnCancelarACQ))
                .addGap(20, 20, 20))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarACQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarACQActionPerformed
        // TODO add your handling code here:
        //read inputs
        String paciente = txtNombreACQ.getSelectedItem().toString();
        String servicios = combBoxServiciosACQ.getSelectedItem().toString();
        String material = combBoxMaterialACQ.getSelectedItem().toString();
        String med = combBoxMedicamentoACQ.getSelectedItem().toString();
        String sol = combBoxSolucionesACQ.getSelectedItem().toString();
        String sut = combBoxSuturasACQ.getSelectedItem().toString();
        String ad = combBoxServAdACQ.getSelectedItem().toString();
        String adEx = combBoxServAdExtACQ.getSelectedItem().toString();
        String otroMat = txtOtroMat.getText();
        double otroPU = 0;
        int servNo = ((Integer) spinServiciosACQ.getValue());
        int matNo = ((Integer) spinMaterialACQ.getValue());
        int medNo = ((Integer) spinMedicamentoACQ.getValue());
        int solNo = ((Integer) spinSolucionesACQ.getValue());
        int sutNo = ((Integer) spinSuturasACQ.getValue());
        int adNo = ((Integer) spinServAdACQ.getValue());
        int adExNo = ((Integer) spinServAdExACQ.getValue());  
        int otroNo = ((Integer) spinOtro.getValue());
        
        //if otro is empty dont read ir or else itll produce error
        if(!"".equals(txtOtroPU.getText())) {
            otroPU = Double.parseDouble(txtOtroPU.getText());
        }
        
        //if the number is more than 0 add it to cuentas
        if(servNo != 0) {
            try {
            pst = conn.getConnection().prepareStatement("insert into cuentas(paciente,material,cantidad,tipo)values(?,?,?,?)");
            pst.setString(1, paciente);
            pst.setString(2, servicios);
            pst.setInt(3, servNo);
            pst.setString(4, "AMB");
            pst.executeUpdate();
            
            } catch (SQLException ex) {
                Logger.getLogger(CuentaQuirofano.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        if(matNo != 0) {
            try {
                pst = conn.getConnection().prepareStatement("insert into cuentas(paciente,material,cantidad,tipo)values(?,?,?,?)");
                pst.setString(1, paciente);
                pst.setString(2, material);
                pst.setInt(3, matNo);
                pst.setString(4, "AMB");
                pst.executeUpdate();
                
            
            } catch (SQLException ex) {
                Logger.getLogger(CuentaQuirofano.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        if(medNo != 0) {
            
            try {
               pst = conn.getConnection().prepareStatement("insert into cuentas(paciente,material,cantidad,tipo)values(?,?,?,?)");
               pst.setString(1, paciente);
               pst.setString(2, med);
               pst.setInt(3, medNo);
               pst.setString(4, "AMB");
               pst.executeUpdate();
            
            } catch (SQLException ex) {
                Logger.getLogger(CuentaQuirofano.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        if(solNo != 0) {
            try {
                pst = conn.getConnection().prepareStatement("insert into cuentas(paciente,material,cantidad,tipo)values(?,?,?,?)");
                pst.setString(1, paciente);
                pst.setString(2, sol);
                pst.setInt(3, solNo);
                pst.setString(4, "AMB");
                pst.executeUpdate();
            
            } catch (SQLException ex) {
                Logger.getLogger(CuentaQuirofano.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        if(sutNo != 0) {
            try {
                pst = conn.getConnection().prepareStatement("insert into cuentas(paciente,material,cantidad,tipo)values(?,?,?,?)");
                pst.setString(1, paciente);
                pst.setString(2, sut);
                pst.setInt(3, sutNo);
                pst.setString(4, "AMB");
                pst.executeUpdate();
            
            } catch (SQLException ex) {
                Logger.getLogger(CuentaQuirofano.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        if(adNo != 0) {
            try {
                pst = conn.getConnection().prepareStatement("insert into cuentas(paciente,material,cantidad,tipo)values(?,?,?,?)");
                pst.setString(1, paciente);
                pst.setString(2, ad);
                pst.setInt(3, adNo);
                pst.setString(4, "AMB");
                pst.executeUpdate();
            
            } catch (SQLException ex) {
                Logger.getLogger(CuentaQuirofano.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        if(adExNo != 0) {
            try {
                pst = conn.getConnection().prepareStatement("insert into cuentas(paciente,material,cantidad,tipo)values(?,?,?,?)");
                pst.setString(1, paciente);
                pst.setString(2, adEx);
                pst.setInt(3, adExNo);
                pst.setString(4, "AMB");
                pst.executeUpdate();
            
            } catch (SQLException ex) {
                Logger.getLogger(CuentaQuirofano.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        //if a new material is added to cuenta, first, itll add the material to preciosHosp/AMB, 
        //then it will add it to the patients bill and procede as usual
        
        if(otroNo != 0) {
            try {
                pst = conn.getConnection().prepareStatement("insert into preciosAmb(material,precio,categoria)values(?,?,?)");
                pst.setString(1, otroMat);
                pst.setDouble(2, otroPU);
                pst.setString(3, "OTROS");
                pst.executeUpdate();
                
                pst = conn.getConnection().prepareStatement("insert into cuentas(paciente,material,cantidad,tipo)values(?,?,?,?)");
                pst.setString(1, paciente);
                pst.setString(2, otroMat);
                pst.setInt(3, otroNo);
                pst.setString(4, "AMB");
                pst.executeUpdate();
            
            } catch (SQLException ex) {
                Logger.getLogger(CuentaQuirofano.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } 
        
        //update columns of precio subtotal and iva in cuentas
        
        updatePrecio();
        updateSubtotal();
        updateIva();
        
        updateCuentaReal();
        
        reiniciarCampos();
  
        
    }//GEN-LAST:event_btnAceptarACQActionPerformed
    
    //match price of material w/ DB 
    public void updatePrecio() {
        try {
                pst = conn.getConnection().prepareStatement("UPDATE `cuentas` JOIN `preciosAmb` ON `cuentas`.`material` = `preciosAmb`.`material` SET `cuentas`.`precio` = `preciosAmb`.`precio`");
                pst.executeUpdate();
            
            } catch (SQLException ex) {
                Logger.getLogger(CuentaQuirofano.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    // update subtotal to multiply the new number of materials
    public void updateSubtotal() {
        try {
                pst = conn.getConnection().prepareStatement("UPDATE `cuentas` SET `cuentas`.`subtotal` = `cuentas`.`precio` * `cuentas`.`cantidad`");
                pst.executeUpdate();
            
            } catch (SQLException ex) {
                Logger.getLogger(CuentaQuirofano.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    //update iva by multiplying subtotal * 1.16 if its not med or sol
    public void updateIva() {
        try {
                pst = conn.getConnection().prepareStatement("UPDATE `cuentas` JOIN `preciosAmb` ON `cuentas`.`material` = `preciosAmb`.`material` SET `cuentas`.`iva` = `preciosAmb`.`iva` WHERE `cuentas`.`tipo` = 'AMB'");
                pst.executeUpdate();
                pst = conn.getConnection().prepareStatement("UPDATE `cuentas` SET `cuentas`.`precioIva` = `cuentas`.`subtotal` * 1.16 where `cuentas`.`iva` = 'Y' ");
                pst.executeUpdate();
                pst = conn.getConnection().prepareStatement("UPDATE `cuentas` SET `cuentas`.`precioIva` = `cuentas`.`subtotal` where `cuentas`.`iva` = 'N' ");
                pst.executeUpdate();
                
            
            } catch (SQLException ex) {
                Logger.getLogger(CuentaHosp.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    //reset everything
    public void reiniciarCampos() {
        combBoxMaterialACQ.setSelectedIndex(0);
        combBoxMedicamentoACQ.setSelectedIndex(0);
        combBoxServAdACQ.setSelectedIndex(0);
        combBoxServAdExtACQ.setSelectedIndex(0);
        combBoxServiciosACQ.setSelectedIndex(0);
        combBoxSolucionesACQ.setSelectedIndex(0);
        combBoxSuturasACQ.setSelectedIndex(0);
        txtNombreACQ.setSelectedIndex(0);
        txtOtroMat.setText("");
        txtOtroPU.setText("");
        spinMaterialACQ.setValue(0);
        spinMedicamentoACQ.setValue(0);
        spinOtro.setValue(0);
        spinServAdACQ.setValue(0);
        spinServAdExACQ.setValue(0);
        spinServiciosACQ.setValue(0);
        spinSolucionesACQ.setValue(0);
        spinSuturasACQ.setValue(0);
        
    }
    
    private void btnCancelarACQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarACQActionPerformed
        // TODO add your handling code here:
        PagPrincipalPiso ppp = new PagPrincipalPiso();
        ppp.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_btnCancelarACQActionPerformed
    
    //This method calls all the pacientes that are active (that have no fecha egraso) to display it in the combobox so they
    //update the cuenta
    public void loadPaciente() {
        try {
            pst = conn.getConnection().prepareStatement("SELECT `nombre` FROM `Paciente` WHERE `egreso` IS NULL");
            rs = pst.executeQuery();
            txtNombreACQ.removeAll(); 
            
            while(rs.next()) {
                txtNombreACQ.addItem(rs.getString(1));
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(CuentaQuirofano.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //load materials
    public void loadMateriales() {
        try {
            pst = conn.getConnection().prepareStatement("SELECT `material` FROM `preciosAmb` WHERE `categoria` = 'SERVICIOS'");
            rs = pst.executeQuery();
            combBoxServiciosACQ.removeAll(); 
            
            while(rs.next()) {
                combBoxServiciosACQ.addItem(rs.getString(1));
            }
            
            pst = conn.getConnection().prepareStatement("SELECT `material` FROM `preciosAmb` WHERE `categoria` = 'CURACION'");
            rs = pst.executeQuery();
            combBoxMaterialACQ.removeAll(); 
            
            while(rs.next()) {
                combBoxMaterialACQ.addItem(rs.getString(1));
            }
            
            pst = conn.getConnection().prepareStatement("SELECT `material` FROM `preciosAmb` WHERE `categoria` = 'MEDICAMENTOS'");
            rs = pst.executeQuery();
            combBoxMedicamentoACQ.removeAll(); 
            
            while(rs.next()) {
                combBoxMedicamentoACQ.addItem(rs.getString(1));
            }
            
            pst = conn.getConnection().prepareStatement("SELECT `material` FROM `preciosAmb` WHERE `categoria` = 'SOLUCIONES'");
            rs = pst.executeQuery();
            combBoxSolucionesACQ.removeAll(); 
            
            while(rs.next()) {
                combBoxSolucionesACQ.addItem(rs.getString(1));
            }
            
            pst = conn.getConnection().prepareStatement("SELECT `material` FROM `preciosAmb` WHERE `categoria` = 'SUTURAS'");
            rs = pst.executeQuery();
            combBoxSuturasACQ.removeAll(); 
            
            while(rs.next()) {
                combBoxSuturasACQ.addItem(rs.getString(1));
            }
            
            pst = conn.getConnection().prepareStatement("SELECT `material` FROM `preciosAmb` WHERE `categoria` = 'SERVAD'");
            rs = pst.executeQuery();
            combBoxServAdACQ.removeAll(); 
            
            while(rs.next()) {
                combBoxServAdACQ.addItem(rs.getString(1));
            }
            
            pst = conn.getConnection().prepareStatement("SELECT `material` FROM `preciosAmb` WHERE `categoria` = 'SERVADEX'");
            rs = pst.executeQuery();
            combBoxServAdExtACQ.removeAll(); 
            
            while(rs.next()) {
                combBoxServAdExtACQ.addItem(rs.getString(1));
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(CuentaQuirofano.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    // update cuenta real by adding all precio + iva
    public void updateCuentaReal() {
        String paciente = txtNombreACQ.getSelectedItem().toString();
        // this try and catch will update the total bill of the pacient after adding something to the individual bill
        try {
            pst = conn.getConnection().prepareStatement("UPDATE `Paciente` SET `Paciente`.`cuenta real` = (SELECT SUM(`cuentas`.`precioIva`) FROM `cuentas` WHERE `cuentas`.`paciente` = ?) WHERE `Paciente`.`nombre` = ?");
            pst.setString(1, paciente);
            pst.setString(2,paciente);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Cuenta actualizada exitosamente");
        } catch (SQLException ex) {
            Logger.getLogger(CuentaQuirofano.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CuentaQuirofano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CuentaQuirofano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CuentaQuirofano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CuentaQuirofano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CuentaQuirofano().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptarACQ;
    private javax.swing.JButton btnCancelarACQ;
    private javax.swing.JComboBox<String> combBoxMaterialACQ;
    private javax.swing.JComboBox<String> combBoxMedicamentoACQ;
    private javax.swing.JComboBox<String> combBoxServAdACQ;
    private javax.swing.JComboBox<String> combBoxServAdExtACQ;
    private javax.swing.JComboBox<String> combBoxServiciosACQ;
    private javax.swing.JComboBox<String> combBoxSolucionesACQ;
    private javax.swing.JComboBox<String> combBoxSuturasACQ;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSpinner spinMaterialACQ;
    private javax.swing.JSpinner spinMedicamentoACQ;
    private javax.swing.JSpinner spinOtro;
    private javax.swing.JSpinner spinServAdACQ;
    private javax.swing.JSpinner spinServAdExACQ;
    private javax.swing.JSpinner spinServiciosACQ;
    private javax.swing.JSpinner spinSolucionesACQ;
    private javax.swing.JSpinner spinSuturasACQ;
    private javax.swing.JComboBox<String> txtNombreACQ;
    private javax.swing.JTextField txtOtroMat;
    private javax.swing.JTextField txtOtroPU;
    // End of variables declaration//GEN-END:variables
}
